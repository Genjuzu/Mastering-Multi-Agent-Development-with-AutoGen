# Methodik des Penetrationstestens

## Einführung
Penetrationstests sind strukturierte Sicherheitsevaluierungen, bei denen autorisierte Sicherheitsexperten kontrollierte Angriffe auf Systeme durchführen, um Schwachstellen zu identifizieren und zu beheben, bevor böswillige Angreifer sie ausnutzen können.

## 1. Aufklärungsphase (Reconnaissance)

### 1.1 Passive Aufklärung
- OSINT (Open Source Intelligence) - Informationssammlung aus öffentlich zugänglichen Quellen
- Whois-Abfragen - Registrierungsinformationen zu Domains
- DNS-Informationen - Subdomains, MX-Records, etc.
- Suche nach E-Mail-Adressen, Mitarbeiternamen, Positionsbezeichnungen
- Social Media Profiling - LinkedIn, Twitter, Facebook, etc.
- Google Dorking - Gezielte Suchmaschinenabfragen
- Analyse öffentlicher Code-Repositories (GitHub, GitLab)
- Review von Stellenanzeigen für technische Details

**Werkzeuge**: theHarvester, Maltego, Shodan, Google Dorks, Recon-ng, SpiderFoot

### 1.2 Aktive Aufklärung
- Netzwerk-Scans - Identifizierung aktiver Hosts
- Port-Scans - Erkennung offener Ports und Dienste
- Betriebssystem-Fingerprinting
- Dienste-Identifikation - Versionen von Webservern, Datenbanken, etc.
- Banner Grabbing - Abfrage von Dienst-Bannern zur Versionserkennung
- Technologie-Stack-Identifikation

**Werkzeuge**: Nmap, Masscan, Netcat, Nikto, WhatWeb, Wappalyzer

## 2. Schwachstellenanalyse (Vulnerability Assessment)

### 2.1 Automatisierte Scans
- Überprüfung auf bekannte Schwachstellen (CVEs)
- Konfigurationsprüfungen
- Detektion von Fehlkonfigurationen
- Compliance-Überprüfungen
- Schwachstellenkategorisierung (CVSS-Score)

**Werkzeuge**: Nessus, OpenVAS, Qualys, Nexpose, OWASP ZAP, Burp Suite

### 2.2 Manuelle Analyse
- Code-Reviews
- Konfigurationsüberprüfungen
- Architekturanalyse
- Business Logic Flaws
- Anwendungsspezifische Schwachstellen

**Techniken**: Source Code Analysis, Design Pattern Analysis, API-Testing

## 3. Exploitation

### 3.1 Vorbereitung
- Entwicklung von Angriffsvektoren
- Auswahl von Exploits und Tools
- Anpassung von Exploits an das Ziel
- Erstellung von Payloads
- Planung der Angriffsmethodik

**Werkzeuge**: Metasploit Framework, ExploitDB, SearchSploit

### 3.2 Durchführung
- Ausnutzung spezifischer Schwachstellen
- Validierung von Sicherheitslücken
- Erstellung von Proof-of-Concepts
- Dokumentation der Exploitationswege
- Ethical Hacking Prinzipien beachten

**Beispiel-Angriffe**: SQL Injection, XSS, CSRF, Command Injection, Path Traversal

## 4. Post-Exploitation

### 4.1 Laterale Bewegung
- Privilege Escalation - Erweitern von Berechtigungen
- Credential Harvesting - Sammeln von Zugangsdaten
- Network Lateral Movement - Bewegung im internen Netzwerk
- Persistenz-Mechanismen - Backdoors, Rootkits, etc.
- Data Exfiltration - Extraktion sensibler Daten (simuliert)

**Werkzeuge**: Mimikatz, PowerSploit, Empire, BloodHound

### 4.2 Erweiterung des Zugriffs
- Pivoting - Verwendung kompromittierter Systeme als Sprungpunkte
- Erkundung interner Ressourcen
- Trusted Relationship Exploitation
- Active Directory Angriffe (in Windows-Umgebungen)
- Datenbank-Zugriff und -Analyse

**Techniken**: Pass-the-Hash, Kerberoasting, Token Impersonation

## 5. Berichterstattung

### 5.1 Dokumentation
- Detaillierte Beschreibung der gefundenen Schwachstellen
- Reproduzierbare Schritte zur Ausnutzung
- Bewertung des Schweregrades (CVSS)
- Screencasts und Screenshots als Beweise
- Root-Cause-Analyse

### 5.2 Empfehlungen
- Konkrete Behebungsvorschläge
- Priorisierung der Schwachstellen
- Best Practices zur Verbesserung der Sicherheit
- Strategischer Sicherheitsplan
- Follow-up und Re-Testing

### 5.3 Präsentation
- Executive Summary für Management
- Technischer Bericht für IT-Teams
- Risikobewertung und Business Impact
- Visualisierung der Angriffspfade
- Lessons Learned

## 6. Remediation und Verifikation

### 6.1 Unterstützung bei der Behebung
- Beratung bei Patches und Fixes
- Validierung der implementierten Maßnahmen
- Entwicklung von Security Guidelines
- Schulung der IT-Teams

### 6.2 Erneutes Testen
- Verifizierung der behobenen Schwachstellen
- Überprüfung auf neue Probleme
- Continuous Security Testing
- Security Maturity Assessment

## Ethische und rechtliche Aspekte

- Klare Scope-Definition und Autorisierung
- Einhaltung rechtlicher Rahmenbedingungen
- Vertraulichkeit sensibler Informationen
- Verantwortungsvolle Offenlegung
- No-harm Prinzip 